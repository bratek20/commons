// DO NOT EDIT! Autogenerated by HLA tool

package com.github.bratek20.architecture.properties.fixtures

import com.github.bratek20.architecture.serialization.api.*
import com.github.bratek20.architecture.serialization.fixtures.*

import com.github.bratek20.architecture.properties.api.*

data class ExpectedSerializedProperty(
    var keyName: String? = null,
    var value: (ExpectedSerializedValue.() -> Unit)? = null,
)
fun diffSerializedProperty(given: SerializedProperty, expectedInit: ExpectedSerializedProperty.() -> Unit, path: String = ""): String {
    val expected = ExpectedSerializedProperty().apply(expectedInit)
    val result: MutableList<String> = mutableListOf()

    expected.keyName?.let {
        if (given.getKeyName() != it) { result.add("${path}keyName ${given.getKeyName()} != ${it}") }
    }

    expected.value?.let {
        if (diffSerializedValue(given.getValue(), it) != "") { result.add(diffSerializedValue(given.getValue(), it, "${path}value.")) }
    }

    return result.joinToString("\n")
}