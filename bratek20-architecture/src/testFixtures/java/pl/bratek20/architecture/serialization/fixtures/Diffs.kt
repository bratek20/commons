// DO NOT EDIT! Autogenerated by HLA tool

package pl.bratek20.architecture.serialization.fixtures

import pl.bratek20.architecture.serialization.api.*

data class ExpectedSerializedValue(
    var value: String? = null,
    var type: SerializationType? = null,
)
fun diffSerializedValue(given: SerializedValue, expectedInit: ExpectedSerializedValue.() -> Unit, path: String = ""): String {
    val expected = ExpectedSerializedValue().apply(expectedInit)
    val result: MutableList<String> = mutableListOf()

    expected.value?.let {
        if (given.getValue() != it) { result.add("${path}value ${given.getValue()} != ${it}") }
    }

    expected.type?.let {
        if (given.getType() != it) { result.add("${path}type ${given.getType()} != ${it}") }
    }

    return result.joinToString("\n")
}