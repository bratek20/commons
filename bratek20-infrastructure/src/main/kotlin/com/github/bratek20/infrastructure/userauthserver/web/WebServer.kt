// DO NOT EDIT! Autogenerated by HLA tool

package com.github.bratek20.infrastructure.userauthserver.web

import com.github.bratek20.architecture.structs.api.Struct
import com.github.bratek20.architecture.serialization.api.Serializer
import com.github.bratek20.architecture.serialization.context.SerializationFactory

import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

import com.github.bratek20.infrastructure.userauthserver.api.*

@RestController
@RequestMapping("/userAuthServerApi")
class UserAuthServerApiController(
    private val api: UserAuthServerApi,
) {
    private val serializer: Serializer = SerializationFactory.createSerializer()

    @PostMapping("/createUserAndLogin")
    fun createUserAndLogin(): Struct {
        // no request needed
        return serializer.asStruct(UserAuthServerApiCreateUserAndLoginResponse(api.createUserAndLogin()))
    }

    @PostMapping("/login")
    fun login(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, UserAuthServerApiLoginRequest::class.java)
        return serializer.asStruct(UserAuthServerApiLoginResponse(api.login(request.getAuthId()).value))
    }
}

